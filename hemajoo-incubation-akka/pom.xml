<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
  	<artifactId>akka</artifactId>
  	<name>Hemajoo Incubation Software</name>
  	
  	<parent>
  		<groupId>org.hemajoo.incubation</groupId>
  		<artifactId>parent</artifactId>
  		<version>0.0.1-SNAPSHOT</version>
  		<relativePath>../hemajoo-incubation-parent</relativePath>
  	</parent>

	<properties>
		<project.version.akka>2.5.17</project.version.akka>
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Challenges that actors solve include the following:
					How to build and design high-performance, concurrent applications.
					How to handle errors in a multi-threaded environment.
					How to protect my project from the pitfalls of concurrency.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-actor_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

			<!-- Challenges Remoting solves include the following:
					How to address actor systems living on remote hosts.
					How to address individual actors on remote actor systems.
					How to turn messages to bytes on the wire.
					How to manage low-level, network connections (and reconnections) between hosts, detect crashed actor systems and hosts, all transparently.
					How to multiplex communications from an unrelated set of actors on the same network connection, all transparently.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-remote_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>
			
			<!-- Challenges the Cluster module solves include the following:
					How to maintain a set of actor systems (a cluster) that can communicate with each other and consider each other as part of the cluster.
					How to introduce a new system safely to the set of already existing members.
					How to reliably detect systems that are temporarily unreachable.
					How to remove failed hosts/systems (or scale down the system) so that all remaining members agree on the remaining subset of the cluster.
					How to distribute computations among the current set of members.
					How to designate members of the cluster to a certain role, in other words, to provide certain services and not others.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-cluster_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>
			
			<!-- Challenges that Sharding solves include the following:
					How to model and scale out a large set of stateful entities on a set of systems.
					How to ensure that entities in the cluster are distributed properly so that load is properly balanced across the machines.
					How to ensure migrating entities from a crashed system without losing the state.
					How to ensure that an entity does not exist on multiple systems at the same time and hence keeps consistent.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-cluster-sharding_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

			<!-- The Singleton module can be used to solve these challenges:
					How to ensure that only one instance of a service is running in the whole cluster.
					How to ensure that the service is up even if the system hosting it currently crashes or shuts down during the process of scaling down.
					How to reach this instance from any member of the cluster assuming that it can migrate to other systems over time.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-cluster-singleton_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>
			
			<!-- Cluster Publish-Subscribe is intended to solve the following challenges:
					How to broadcast messages to an interested set of parties in a cluster.
					How to send a message to a member from an interested set of parties in a cluster.
					How to subscribe and un-subscribe for events of a certain topic in the cluster.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-cluster-tools_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

			<!-- Persistence tackles the following challenges:
					How to restore the state of an entity/actor when system restarts or crashes.
					How to implement a CQRS system.
					How to ensure reliable delivery of messages in face of network errors and system crashes.
					How to introspect domain events that have led an entity to its current state.
					How to leverage Event sourcing in your application to support long-running processes while the project continues to evolve.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-persistence_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

			<!-- Distributed Data is intended to solve the following challenges:
					How to accept writes even in the face of cluster partitions.
					How to share data while at the same time ensuring low-latency local read and write access.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-distributed-data_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

			<!-- Streams solve the following challenges:
					How to handle streams of events or large datasets with high performance, exploiting concurrency and keep resource usage tight.
					How to assemble reusable pieces of event/data processing into flexible pipelines.
					How to connect asynchronous services in a flexible way to each other, and have good performance.
					How to provide or consume Reactive Streams compliant interfaces to interface with a third party library.
 			-->
			<dependency>
  				<groupId>com.typesafe.akka</groupId>
  				<artifactId>akka-stream_2.12</artifactId>
  				<version>${project.version.akka}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
  
  <dependencies>
  
  	<dependency>
  		<groupId>junit</groupId>
  		<artifactId>junit</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>commons-io</groupId>
  		<artifactId>commons-io</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>commons-configuration</groupId>
  		<artifactId>commons-configuration</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>log4j</groupId>
  		<artifactId>log4j</artifactId>
  	</dependency>
  	<dependency>
  		<groupId>org.projectlombok</groupId>
  		<artifactId>lombok</artifactId>
  	</dependency>

	<dependency>
		<groupId>com.neovisionaries</groupId>
		<artifactId>nv-i18n</artifactId>
	</dependency>

	<dependency>
		<groupId>com.google.guava</groupId>
		<artifactId>guava</artifactId>
	</dependency>

	<dependency>
		<groupId>eu.infomas</groupId>
		<artifactId>annotation-detector</artifactId>
	</dependency>

	<dependency>
		<groupId>org.aeonbits.owner</groupId>
		<artifactId>owner</artifactId>
	</dependency>

	<dependency>
		<groupId>com.typesafe.akka</groupId>
		<artifactId>akka-actor_2.12</artifactId>
	</dependency>
  </dependencies>

  <url>https://github.com/ressec/hemajoo-incubation</url>
  <inceptionYear>2018</inceptionYear>
  <description>Project of the Hemajoo Incubation Software (HIS) dedicated to the Akka framework.</description>
  <organization>
  	<name>Hemajoo</name>
  	<url>https://github.com/ressec/hemajoo-incubation</url>
  </organization>
  <scm>
  	<url>scm:git:git@github.com:ressec/hemajoo-incubation.git</url>
  	<connection>scm:git:git@github.com:ressec/hemajoo-incubation.git</connection>
  	<developerConnection>scm:git:git@github.com:ressec/hemajoo-incubation.git</developerConnection>
  </scm>
  <issueManagement>
  	<system>GitHub Issues</system>
  	<url>https://github.com/ressec/hemajoo-incubation/issues</url>
  </issueManagement>
  <ciManagement>
  	<system>Travis CI</system>
  	<url>https://travis-ci.org/ressec/hemajoo-incubation</url>
  </ciManagement>
</project>